

@{
    ViewBag.Title = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

  <link href="~/Styles/Custom.css" rel="stylesheet">
@model Corporate.Purchaser
<header id="headerz1">
    <div class="container">
        <div class="row">
            <div class="col-md-12 text-center">
                <h2 class="BGHeader"><span class="glyphicon glyphicon-pawn" aria-hidden="true"></span>Modify Purchaser Details</h2>
            </div>
        </div>
    </div>

</header>
<script>
    function save() {
        alert();
      var isValid = true;
        if ($('#PurchaserNo').val().trim() == '') {
            $('#PurchaserNo').siblings('span.error').text('Firm Name is Required').css('visibility', 'visible');
            isValid = false;
        }
        return isValid;
    }

</script>

<div class="panel panel-default">
            <div class="panel-heading text-center wasit_panelTitle" style="background-color:red;">
                <h3 class="panel-title"><b><u>Edit Purchaser</u></b></h3>
            </div>
            <div class="panel-body ">
                 @{Html.EnableClientValidation();}
@{Html.EnableUnobtrusiveJavaScript();}
                @using (Html.BeginForm())
                {
                   
    @Html.ValidationSummary(true)

    

        @Html.HiddenFor(model => model.PurchaserID)

                    
                   
            <div class="form-group"> 
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.PurchaserNo, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.PurchaserNo, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.PurchaserNo)
             </div>
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.FirstName)
             </div>

                <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.LastName, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.LastName)
             </div>
          </div><div class="clearfix"></div><br />
                    
                     <div class="form-group"> 
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.Address, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.Address)
             </div>
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.PAN, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.PAN, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.PAN)
             </div>

                <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.DOB, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.DOB, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.DOB)
             </div>
          </div><div class="clearfix"></div><br />
                    
                     <div class="form-group"> 
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.ContactNo, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.ContactNo)
             </div>
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.EmailID, new { @class = "control-label" })</label>
             @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.EmailID)
             </div>

                <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.Gender, new { @class = "control-label" })</label>
             @Html.DropDownList("Gender", new List<SelectListItem>{new SelectListItem{Text="Male", Value="Male"},
            new SelectListItem{Text="Female", Value="Female"}}, "Select Gender", new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.Gender)
             </div>
          </div><div class="clearfix"></div><br />
                    
                     <div class="form-group"> 
              <div class="col-md-4">
            <label for="firm-name" class="control-label"> @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })</label>
             @Html.EditorFor(model => model.IsActive, new { @class = "form-control" })  
                    @Html.ValidationMessageFor(model => model.IsActive)
             </div>
             <div class="col-md-4"></div>

                <div class="col-md-4">
            <label for="firm-name" class="control-label"> </label>
             <input type="submit" value="Save"  class="btn btn-primary success" />
             </div>
          </div><div class="clearfix"></div><br />
                }

                </div>
    </div>




<div>
    @Html.ActionLink("Back", "Purchaser","Actor")
</div>


